{"version":3,"sources":["./src/app/Shared/shared.service.ts","./src/environments/environment.ts","./src/app/Shared/Constants/ColourList.ts","./src/app/wheel-colour/wheel-colour.component.ts","./src/app/wheel-colour/wheel-colour.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { ColourList } from './Constants/ColourList';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SharedService {\n\n  constructor() { }\n\n  getColours(): Promise<string[]> {\n    return Promise.resolve(ColourList);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","\nexport const ColourList: string[] = [\n  '#EE0000',\n  '#CD00CD',\n  '#9F79EE',\n  '#A020F0',\n  '#6495ED',\n  '#98F5FF',\n  '#55AE3A',\n  '#4CBB17',\n  '#FBDB0C',\n  '#EEDD82',\n  '#F0A804',\n  '#E38217',\n\n];\n","import { Component, EventEmitter, Input, Output , OnInit} from '@angular/core';\nimport {SharedService} from '../Shared/shared.service'\n\n@Component({\n  selector: 'app-wheel-colour',\n  templateUrl: './wheel-colour.component.html',\n  styleUrls: ['./wheel-colour.component.scss']\n})\nexport class WheelColourComponent implements OnInit {\n\n  @Input() color: string = '';\n  @Output() event: EventEmitter<string> = new EventEmitter<string>();\n\n  public heading:string = 'Select a colour';\n  public show = false;\n  public colourList:string[]=[];\n\n\n  constructor(public sharedService: SharedService) { }\n\n\n  ngOnInit() {\n    this.getColourList();\n  }\n\n  getColourList(): void {\n    this.sharedService.getColours().then(colourList => this.colourList = colourList);\n  }\n\n  /**\n   * Change color from default colors\n   * @param {string} color\n   */\n  public changeColor(color: string): void {\n    this.color = color;\n    this.event.emit(this.color);\n    this.show = true;\n    this.heading = 'Selected Colour'\n  }\n\n}\n","<div class=\"container\">\n  <div class=\"selected-slice-info\">\n    <div class=\"hex-code\">\n      <p class=\"style\">{{ heading }}</p>\n      <br />\n      <div>\n        <p *ngIf=\"show\" class=\"style-value\">Hex Code: {{ color }}</p>\n      </div>\n    </div>\n    <div\n      *ngIf=\"show\"\n      class=\"selectedColour\"\n      [ngStyle]=\"{ background: color }\"\n    ></div>\n  </div>\n\n  <div class=\"wheel-shape-block block\">\n    <ul class=\"wheel-shape\">\n      <li *ngFor=\"let paint of colourList\">\n        <div\n          (click)=\"changeColor(paint)\"\n          [ngStyle]=\"{ background: paint }\"\n          class=\"slice\"\n        ></div>\n      </li>\n      <div class=\"inner\"></div>\n    </ul>\n  </div>\n</div>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n\n  public backgroundColor: string = '#fff';\n\n  /**\n   * Set color from color picker\n   * @param {string} color\n   */\n  public setColor(color: string) {\n    debugger;\n    this.backgroundColor = color;\n  }\n}\n","\n<div class=\"app\">\n  <div class=\"container main-content\">\n      <app-wheel-colour [color]=\"backgroundColor\" (event)=\"setColor($event)\"></app-wheel-colour>\n  </div>\n</div>\n<!--  -->\n\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppComponent } from './app.component';\nimport { WheelColourComponent } from './wheel-colour/wheel-colour.component';\nimport {SharedService} from '../app/Shared/shared.service'\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    WheelColourComponent\n  ],\n  imports: [\n    BrowserModule\n  ],\n  providers: [SharedService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}